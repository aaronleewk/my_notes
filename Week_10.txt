19/06/2023
=========

AWS

- Firewall
	- Default is all 
	- Can limit to certain IP address, for the below reasons:
		- Communication between microservices
		- Company proxy settings
	- This is done by infrastructure engineers.

6 cloud computing features:
- https://docs.aws.amazon.com/whitepapers/latest/aws-overview/six-advantages-of-cloud-computing.html

EC2 Instance panel:
- IP address two types: Public and private
	- Public: Exposed to internet
	- Private: You can ping it.
- Select 'security'
	- Now seect 'Security Group'
	- Select 'Edit inbound rules'
	- Port range is 22 as that is the default port for SSH.
		- But you can create 'Type' = 'All traffic'
- Back to main panel: Select 'connect'
	- Then select 'SSH client' (the third tab)
	- Copy the SSH command and paste in your terminal.
	- Troubleshooting
		- If 'connection timed out', then the network you are on is limiting outbound requests to certain sites.

- Every time you stop and re-launch an instance, the IP address changes (if you're on free tier).
	- Paiid tier allows for persistent IP address.


================
Java setup
- Once you have your instance set up, install the following:
	- Java 11 (this version specifically because
	- Maven
	- Jenkins
	- Tomcat 9




===========
Jenkins can automatically pull github repos and launch it.



======
Next.js
--------
Client-side navigation means that the page transition happens using JavaScript, which is faster than the default navigation done by the browser as it does not require the whole page to be reloaded. If you’ve used <a href="…"> instead of <Link href="…"> and did this, the background color will be cleared on link clicks because the browser does a full refresh.

--------
favicon (short for "favorites icon") can be see in the "favorites" or "bookmarks" lists in browsers.

-------

_app.js:

export default function App({ Component, pageProps }) {
  return <Component {...pageProps} />;
}

This is is a top-level React component that wraps all the pages in your application. You can use this component to keep state when navigating between pages, or to add global styles.

-----------

static assets, like images, are stored in the top-level public directory. 
Files inside public can be referenced from the root of the application (i.e. '/')

-----

Static Generation vs Server-side Rendering vs Client-side Rendering
- Server vs client components:
	- Server Components have no React state (since they're not interactive)
- If the majority of components are non-interactive, they can be rendered on the server as Server Components. For smaller pieces of interactive UI, we can 'sprinkle' in Client Components. This is a 'server-first' approach.


- Static generation (with or without data)
	- Page is built once 
	- Static generation with data: Sometimes HTML should not be rendered without first fetching some external data. Basically: the webpage has some data dependencies. e.g. blog post
	- To use static site generation, us 'getStaticProps()'
- Server-side rendering: Generates HTML on each request.
	- To use Server-side Rendering, you need to export getServerSideProps instead of getStaticProps from your page.
- Client-side Rendering
	- Rendering components: e.g. 'onClick' to change colour
		- "use client" sits between server-only and client code. It's placed at the top of a file, above imports, to define the cut-off point where it crosses the boundary from the server-only to the client part. Once "use client" is defined in a file, all other modules imported into it, including child components, are considered part of the client bundle.
	- Rendering data
		- For frequently updating data, 'useSWR' is a perfect fit: just import useSWR and use the hook inside any components that use the data.

		import useSWR from 'swr'
	
		const fetcher = (url) => fetch(url).then((res) => res.json());

		function Profile() {
			const { data, error, isLoading } = useSWR('/api/user', fetcher)
			
			if (error) return <div>failed to load</div>
			if (isLoading) return <div>loading...</div>
			return <div>hello {data.name}!</div>
		}

























